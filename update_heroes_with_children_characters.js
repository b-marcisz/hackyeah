// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–µ—Ä–æ–µ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–µ—Ç—Å–∫–∏–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏
const fs = require('fs');
const { exec } = require('child_process');

console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –≥–µ—Ä–æ–µ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–µ—Ç—Å–∫–∏–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏...');

// –°–ø–∏—Å–æ–∫ –¥–µ—Ç—Å–∫–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
const bohaterowieDlaDzieci = [
  "Myszka Miki",
  "Kubu≈õ Puchatek", 
  "Prosiaczek",
  "Tygrysek",
  "K≈Çapouchy",
  "Kr√≥l Lew Simba",
  "Nala z Kr√≥la Lwa",
  "Rafiki z Kr√≥la Lwa",
  "Timon",
  "Pumba",
  "Elsa z Krainy Lodu",
  "Anna z Krainy Lodu",
  "Olaf",
  "Kristoff",
  "Sven",
  "Ariel z Ma≈Çej Syrenki",
  "Sebastian z Ma≈Çej Syrenki",
  "Florek (rybka z Ma≈Çej Syrenki)",
  "Z≈Çotow≈Çosa",
  "Kopciuszek",
  "≈öpiƒÖca Kr√≥lewna",
  "Kr√≥lewna ≈önie≈ºka",
  "KsiƒÖ≈ºƒô z Bajki",
  "Bella z Piƒôknej i Bestii",
  "Bestia",
  "Alicja z Krainy Czar√≥w",
  "Cheshire Kot",
  "Bia≈Ça Kr√≥lowa",
  "Kr√≥lowa Kier",
  "Pinokio",
  "Geppetto",
  "D≈ºepetto",
  "Jiminy ≈öwierszcz",
  "Bambi",
  "Thumper (K≈Çapouchy kr√≥lik z Bambi)",
  "Dumbo",
  "Myszka Minnie",
  "Kaczor Donald",
  "Kaczka Daisy",
  "Goofy",
  "Pluto",
  "Zygzak McQueen",
  "Z≈Çomek z Aut",
  "Buzz Astral z Toy Story",
  "Woody z Toy Story",
  "Jessie z Toy Story",
  "Rex z Toy Story",
  "Mr. Potato Head",
  "Barbie z Toy Story",
  "Forky",
  "SpongeBob Kanciastoporty",
  "Patryk Rozgwiazda",
  "Pan Krab",
  "Skalmarek",
  "Sandy Pysia",
  "Dora poznaje ≈õwiat",
  "Butek (ma≈Çpka Dory)",
  "Diego (kuzyn Dory)",
  "≈öwinka Peppa",
  "George (brat Peppy)",
  "Mama ≈öwinka",
  "Tata ≈öwinka",
  "Rebeka Kr√≥lik",
  "Suzy Owca",
  "Marta z Marta m√≥wi",
  "Franklin ≈º√≥≈Çw",
  "Ma≈Ça Mi z Mumink√≥w",
  "Muminek",
  "Panna Migotka",
  "Ryjek",
  "W≈Ç√≥czykij",
  "Pocahontas",
  "Mulan",
  "Vaiana (Moana)",
  "Maui z Moany",
  "Baloo z Ksiƒôgi D≈ºungli",
  "Bagheera",
  "Mowgli",
  "Shere Khan",
  "Kung Fu Panda Po",
  "Tigress",
  "Shifu",
  "Pingwiny z Madagaskaru",
  "Kr√≥l Julian",
  "Maurice",
  "Mort",
  "Minionek Bob",
  "Minionek Kevin",
  "Minionek Stuart",
  "Gru",
  "Shrek",
  "Fiona",
  "Osio≈Ç",
  "Kot w Butach",
  "Czerwony Kapturek",
  "Wilk",
  "Trzy ≈öwinki",
  "K≈Çapouchy (z Kubusia Puchatka)",
  "Nemo z Gdzie jest Nemo",
  "Dory z Gdzie jest Nemo",
  "Marlin (tata Nemo)",
  "Pikachu",
  "Ash Ketchum"
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∫–æ–º–∞–Ω–¥—ã
function executeSQL(sql) {
  return new Promise((resolve, reject) => {
    const command = `docker exec postgres-cards psql -U postgres -d postgres -c "${sql}"`;
    exec(command, (error, stdout, stderr) => {
      if (error) {
        reject(error);
      } else {
        resolve(stdout);
      }
    });
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
async function updateHeroesWithChildrenCharacters() {
  try {
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${bohaterowieDlaDzieci.length} –¥–µ—Ç—Å–∫–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
    const uniqueHeroes = [...new Set(bohaterowieDlaDzieci)];
    console.log(`üìä –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π: ${uniqueHeroes.length}`);
    
    if (bohaterowieDlaDzieci.length !== uniqueHeroes.length) {
      console.log('‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã –≤ —Å–ø–∏—Å–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π!');
    }
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    const countResult = await executeSQL("SELECT COUNT(*) FROM number_associations WHERE is_primary = true;");
    console.log('üìà –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π:', countResult.trim());
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥—É–±–ª–∏–∫–∞—Ç—ã –≥–µ—Ä–æ–µ–≤
    console.log('üîç –¢–µ–∫—É—â–∏–µ –¥—É–±–ª–∏–∫–∞—Ç—ã –≥–µ—Ä–æ–µ–≤:');
    const duplicatesBefore = await executeSQL("SELECT hero, COUNT(*) FROM number_associations WHERE is_primary = true GROUP BY hero HAVING COUNT(*) > 1 ORDER BY COUNT(*) DESC;");
    console.log(duplicatesBefore);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –∑–∞–ø–∏—Å—å
    for (let i = 0; i < Math.min(bohaterowieDlaDzieci.length, 100); i++) {
      const hero = bohaterowieDlaDzieci[i].replace(/'/g, "''"); // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏
      const sql = `UPDATE number_associations SET hero = '${hero}' WHERE number = ${i} AND is_primary = true;`;
      
      try {
        await executeSQL(sql);
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –≥–µ—Ä–æ–π –¥–ª—è –Ω–æ–º–µ—Ä–∞ ${i}: "${bohaterowieDlaDzieci[i]}"`);
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–∞ ${i}:`, error.message);
      }
      
      // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 50));
    }
    
    console.log('üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
    const uniqueResult = await executeSQL("SELECT COUNT(DISTINCT hero) as unique_heroes, COUNT(hero) as total_heroes FROM number_associations WHERE is_primary = true;");
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:');
    console.log(uniqueResult);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã
    const duplicatesResult = await executeSQL("SELECT hero, COUNT(*) FROM number_associations WHERE is_primary = true GROUP BY hero HAVING COUNT(*) > 1 ORDER BY COUNT(*) DESC;");
    console.log('üìä –î—É–±–ª–∏–∫–∞—Ç—ã –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:');
    console.log(duplicatesResult);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
    const sampleResult = await executeSQL("SELECT number, hero FROM number_associations WHERE is_primary = true ORDER BY number LIMIT 10;");
    console.log('üìã –ü–µ—Ä–≤—ã–µ 10 –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π:');
    console.log(sampleResult);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
updateHeroesWithChildrenCharacters();
